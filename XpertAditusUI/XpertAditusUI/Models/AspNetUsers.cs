// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace XpertAditusUI.Models
{
    [Index(nameof(NormalizedEmail), Name = "EmailIndex")]
    public partial class AspNetUsers
    {
        public AspNetUsers()
        {
            AddressCreatedByNavigation = new HashSet<Address>();
            AddressModifiedByNavigation = new HashSet<Address>();
            AdmissionCreatedByNavigation = new HashSet<Admission>();
            AdmissionUpdatedByNavigation = new HashSet<Admission>();
            AppliedJobsCreatedByNavigation = new HashSet<AppliedJobs>();
            AppliedJobsModifiedByNavigation = new HashSet<AppliedJobs>();
            ApprovalJobsCreatedByNavigation = new HashSet<ApprovalJobs>();
            ApprovalJobsModifiedByNavigation = new HashSet<ApprovalJobs>();
            AspNetUserClaims = new HashSet<AspNetUserClaims>();
            AspNetUserLogins = new HashSet<AspNetUserLogins>();
            AspNetUserRoles = new HashSet<AspNetUserRoles>();
            AspNetUserTokens = new HashSet<AspNetUserTokens>();
            CandidateCollegeMappingCreatedByNavigation = new HashSet<CandidateCollegeMapping>();
            CandidateCollegeMappingUpdatedByNavigation = new HashSet<CandidateCollegeMapping>();
            CandidateResult = new HashSet<CandidateResult>();
            CandidateTrainingStatus = new HashSet<CandidateTrainingStatus>();
            CityMasterCreatedByNavigation = new HashSet<CityMaster>();
            CityMasterModifiedByNavigation = new HashSet<CityMaster>();
            CollegeAttachmentsCreatedByNavigation = new HashSet<CollegeAttachments>();
            CollegeAttachmentsModifiedByNavigation = new HashSet<CollegeAttachments>();
            CollegeCourseSpecializationMappingCreatedByNavigation = new HashSet<CollegeCourseSpecializationMapping>();
            CollegeCourseSpecializationMappingUpdatedByNavigation = new HashSet<CollegeCourseSpecializationMapping>();
            CollegeProfileCreatedByNavigation = new HashSet<CollegeProfile>();
            CollegeProfileLogin = new HashSet<CollegeProfile>();
            CollegeProfileUpdatedByNavigation = new HashSet<CollegeProfile>();
            CollegeStudentMappingCreatedByNavigation = new HashSet<CollegeStudentMapping>();
            CollegeStudentMappingLogin = new HashSet<CollegeStudentMapping>();
            CompanyProfileCreatedByNavigation = new HashSet<CompanyProfile>();
            CompanyProfileLogin = new HashSet<CompanyProfile>();
            CompanyProfileUpdatedByNavigation = new HashSet<CompanyProfile>();
            CountryMasterCreatedByNavigation = new HashSet<CountryMaster>();
            CountryMasterModifiedByNavigation = new HashSet<CountryMaster>();
            CourseCreatedByNavigation = new HashSet<Course>();
            CourseMasterCreatedByNavigation = new HashSet<CourseMaster>();
            CourseMasterUpdatedByNavigation = new HashSet<CourseMaster>();
            CourseModifiedByNavigation = new HashSet<Course>();
            CourseSpecializationMappingCreatedByNavigation = new HashSet<CourseSpecializationMapping>();
            CourseSpecializationMappingUpdatedByNavigation = new HashSet<CourseSpecializationMapping>();
            DisclaimerAccetped = new HashSet<DisclaimerAccetped>();
            DisclaimerCreatedByNavigation = new HashSet<Disclaimer>();
            DisclaimerModifiedByNavigation = new HashSet<Disclaimer>();
            DistrictMasterCreatedByNavigation = new HashSet<DistrictMaster>();
            DistrictMasterModifiedByNavigation = new HashSet<DistrictMaster>();
            EducationMasterCreatedByNavigation = new HashSet<EducationMaster>();
            EducationMasterModifiedByNavigation = new HashSet<EducationMaster>();
            ExperienceCreatedByNavigation = new HashSet<Experience>();
            ExperienceModifiedByNavigation = new HashSet<Experience>();
            InterviewResultCreatedByNavigation = new HashSet<InterviewResult>();
            InterviewResultModifiedByNavigation = new HashSet<InterviewResult>();
            JobMasterCreatedByNavigation = new HashSet<JobMaster>();
            JobMasterModifiedByNavigation = new HashSet<JobMaster>();
            JobQualificationCreatedByNavigation = new HashSet<JobQualification>();
            JobQualificationModifiedByNavigation = new HashSet<JobQualification>();
            OtpMaster = new HashSet<OtpMaster>();
            PacandidateResult = new HashSet<PacandidateResult>();
            PadisclaimerAccetped = new HashSet<PadisclaimerAccetped>();
            PadisclaimerCreatedByNavigation = new HashSet<Padisclaimer>();
            PadisclaimerModifiedByNavigation = new HashSet<Padisclaimer>();
            PamonthlyTestCreatedByNavigation = new HashSet<PamonthlyTest>();
            PamonthlyTestUpdatedByNavigation = new HashSet<PamonthlyTest>();
            PaquestionnaireCreatedByNavigation = new HashSet<Paquestionnaire>();
            PaquestionnaireModifiedByNavigation = new HashSet<Paquestionnaire>();
            PaquestionnaireResultCreatedByNavigation = new HashSet<PaquestionnaireResult>();
            PaquestionnaireResultModifiedByNavigation = new HashSet<PaquestionnaireResult>();
            PatestCaseAttachments = new HashSet<PatestCaseAttachments>();
            PatestScenarioCreatedByNavigation = new HashSet<PatestScenario>();
            PatestScenarioUpdatedByNavigation = new HashSet<PatestScenario>();
            PatrainingContentMasterCreatedByNavigation = new HashSet<PatrainingContentMaster>();
            PatrainingContentMasterModifiedByNavigation = new HashSet<PatrainingContentMaster>();
            PavideoQuestionResultCreatedByNavigation = new HashSet<PavideoQuestionResult>();
            PavideoQuestionResultModifiedByNavigation = new HashSet<PavideoQuestionResult>();
            PaymentHistory = new HashSet<PaymentHistory>();
            PpoInfoCreatedByNavigation = new HashSet<PpoInfo>();
            PpoInfoUpdatedByNavigation = new HashSet<PpoInfo>();
            PpoLogic = new HashSet<PpoLogic>();
            QualificationCreatedByNavigation = new HashSet<Qualification>();
            QualificationModifiedByNavigation = new HashSet<Qualification>();
            QuestionnaireCreatedByNavigation = new HashSet<Questionnaire>();
            QuestionnaireModifiedByNavigation = new HashSet<Questionnaire>();
            QuestionnaireResultCreatedByNavigation = new HashSet<QuestionnaireResult>();
            QuestionnaireResultModifiedByNavigation = new HashSet<QuestionnaireResult>();
            SentNotificationsCreatedByNavigation = new HashSet<SentNotifications>();
            SentNotificationsModifiedByNavigation = new HashSet<SentNotifications>();
            ShortlistedCandidatesCreatedByNavigation = new HashSet<ShortlistedCandidates>();
            ShortlistedCandidatesModifiedByNavigation = new HashSet<ShortlistedCandidates>();
            SpecializationMasterCreatedByNavigation = new HashSet<SpecializationMaster>();
            SpecializationMasterUpdatedByNavigation = new HashSet<SpecializationMaster>();
            StateMasterCreatedByNavigation = new HashSet<StateMaster>();
            StateMasterModifiedByNavigation = new HashSet<StateMaster>();
            TestScenarioCreatedByNavigation = new HashSet<TestScenario>();
            TestScenarioUpdatedByNavigation = new HashSet<TestScenario>();
            TrainingContentsMasterCreatedByNavigation = new HashSet<TrainingContentsMaster>();
            TrainingContentsMasterModifiedByNavigation = new HashSet<TrainingContentsMaster>();
            UserCourses = new HashSet<UserCourses>();
            UserProfileCreatedByNavigation = new HashSet<UserProfile>();
            UserProfileLogin = new HashSet<UserProfile>();
            UserProfileModifiedByNavigation = new HashSet<UserProfile>();
        }

        [Key]
        public string Id { get; set; }
        [StringLength(256)]
        public string UserName { get; set; }
        [StringLength(256)]
        public string NormalizedUserName { get; set; }
        [StringLength(256)]
        public string Email { get; set; }
        [StringLength(256)]
        public string NormalizedEmail { get; set; }
        public bool EmailConfirmed { get; set; }
        public string PasswordHash { get; set; }
        public string SecurityStamp { get; set; }
        public string ConcurrencyStamp { get; set; }
        public string PhoneNumber { get; set; }
        public bool PhoneNumberConfirmed { get; set; }
        public bool TwoFactorEnabled { get; set; }
        public DateTimeOffset? LockoutEnd { get; set; }
        public bool LockoutEnabled { get; set; }
        public int AccessFailedCount { get; set; }

        [InverseProperty(nameof(Address.CreatedByNavigation))]
        public virtual ICollection<Address> AddressCreatedByNavigation { get; set; }
        [InverseProperty(nameof(Address.ModifiedByNavigation))]
        public virtual ICollection<Address> AddressModifiedByNavigation { get; set; }
        [InverseProperty(nameof(Admission.CreatedByNavigation))]
        public virtual ICollection<Admission> AdmissionCreatedByNavigation { get; set; }
        [InverseProperty(nameof(Admission.UpdatedByNavigation))]
        public virtual ICollection<Admission> AdmissionUpdatedByNavigation { get; set; }
        [InverseProperty(nameof(AppliedJobs.CreatedByNavigation))]
        public virtual ICollection<AppliedJobs> AppliedJobsCreatedByNavigation { get; set; }
        [InverseProperty(nameof(AppliedJobs.ModifiedByNavigation))]
        public virtual ICollection<AppliedJobs> AppliedJobsModifiedByNavigation { get; set; }
        [InverseProperty(nameof(ApprovalJobs.CreatedByNavigation))]
        public virtual ICollection<ApprovalJobs> ApprovalJobsCreatedByNavigation { get; set; }
        [InverseProperty(nameof(ApprovalJobs.ModifiedByNavigation))]
        public virtual ICollection<ApprovalJobs> ApprovalJobsModifiedByNavigation { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<AspNetUserClaims> AspNetUserClaims { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<AspNetUserLogins> AspNetUserLogins { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<AspNetUserRoles> AspNetUserRoles { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<AspNetUserTokens> AspNetUserTokens { get; set; }
        [InverseProperty(nameof(CandidateCollegeMapping.CreatedByNavigation))]
        public virtual ICollection<CandidateCollegeMapping> CandidateCollegeMappingCreatedByNavigation { get; set; }
        [InverseProperty(nameof(CandidateCollegeMapping.UpdatedByNavigation))]
        public virtual ICollection<CandidateCollegeMapping> CandidateCollegeMappingUpdatedByNavigation { get; set; }
        [InverseProperty("CreatedByNavigation")]
        public virtual ICollection<CandidateResult> CandidateResult { get; set; }
        [InverseProperty("CreatedByNavigation")]
        public virtual ICollection<CandidateTrainingStatus> CandidateTrainingStatus { get; set; }
        [InverseProperty(nameof(CityMaster.CreatedByNavigation))]
        public virtual ICollection<CityMaster> CityMasterCreatedByNavigation { get; set; }
        [InverseProperty(nameof(CityMaster.ModifiedByNavigation))]
        public virtual ICollection<CityMaster> CityMasterModifiedByNavigation { get; set; }
        [InverseProperty(nameof(CollegeAttachments.CreatedByNavigation))]
        public virtual ICollection<CollegeAttachments> CollegeAttachmentsCreatedByNavigation { get; set; }
        [InverseProperty(nameof(CollegeAttachments.ModifiedByNavigation))]
        public virtual ICollection<CollegeAttachments> CollegeAttachmentsModifiedByNavigation { get; set; }
        [InverseProperty(nameof(CollegeCourseSpecializationMapping.CreatedByNavigation))]
        public virtual ICollection<CollegeCourseSpecializationMapping> CollegeCourseSpecializationMappingCreatedByNavigation { get; set; }
        [InverseProperty(nameof(CollegeCourseSpecializationMapping.UpdatedByNavigation))]
        public virtual ICollection<CollegeCourseSpecializationMapping> CollegeCourseSpecializationMappingUpdatedByNavigation { get; set; }
        [InverseProperty(nameof(CollegeProfile.CreatedByNavigation))]
        public virtual ICollection<CollegeProfile> CollegeProfileCreatedByNavigation { get; set; }
        [InverseProperty(nameof(CollegeProfile.Login))]
        public virtual ICollection<CollegeProfile> CollegeProfileLogin { get; set; }
        [InverseProperty(nameof(CollegeProfile.UpdatedByNavigation))]
        public virtual ICollection<CollegeProfile> CollegeProfileUpdatedByNavigation { get; set; }
        [InverseProperty(nameof(CollegeStudentMapping.CreatedByNavigation))]
        public virtual ICollection<CollegeStudentMapping> CollegeStudentMappingCreatedByNavigation { get; set; }
        [InverseProperty(nameof(CollegeStudentMapping.Login))]
        public virtual ICollection<CollegeStudentMapping> CollegeStudentMappingLogin { get; set; }
        [InverseProperty(nameof(CompanyProfile.CreatedByNavigation))]
        public virtual ICollection<CompanyProfile> CompanyProfileCreatedByNavigation { get; set; }
        [InverseProperty(nameof(CompanyProfile.Login))]
        public virtual ICollection<CompanyProfile> CompanyProfileLogin { get; set; }
        [InverseProperty(nameof(CompanyProfile.UpdatedByNavigation))]
        public virtual ICollection<CompanyProfile> CompanyProfileUpdatedByNavigation { get; set; }
        [InverseProperty(nameof(CountryMaster.CreatedByNavigation))]
        public virtual ICollection<CountryMaster> CountryMasterCreatedByNavigation { get; set; }
        [InverseProperty(nameof(CountryMaster.ModifiedByNavigation))]
        public virtual ICollection<CountryMaster> CountryMasterModifiedByNavigation { get; set; }
        [InverseProperty(nameof(Course.CreatedByNavigation))]
        public virtual ICollection<Course> CourseCreatedByNavigation { get; set; }
        [InverseProperty(nameof(CourseMaster.CreatedByNavigation))]
        public virtual ICollection<CourseMaster> CourseMasterCreatedByNavigation { get; set; }
        [InverseProperty(nameof(CourseMaster.UpdatedByNavigation))]
        public virtual ICollection<CourseMaster> CourseMasterUpdatedByNavigation { get; set; }
        [InverseProperty(nameof(Course.ModifiedByNavigation))]
        public virtual ICollection<Course> CourseModifiedByNavigation { get; set; }
        [InverseProperty(nameof(CourseSpecializationMapping.CreatedByNavigation))]
        public virtual ICollection<CourseSpecializationMapping> CourseSpecializationMappingCreatedByNavigation { get; set; }
        [InverseProperty(nameof(CourseSpecializationMapping.UpdatedByNavigation))]
        public virtual ICollection<CourseSpecializationMapping> CourseSpecializationMappingUpdatedByNavigation { get; set; }
        [InverseProperty("CreatedByNavigation")]
        public virtual ICollection<DisclaimerAccetped> DisclaimerAccetped { get; set; }
        [InverseProperty(nameof(Disclaimer.CreatedByNavigation))]
        public virtual ICollection<Disclaimer> DisclaimerCreatedByNavigation { get; set; }
        [InverseProperty(nameof(Disclaimer.ModifiedByNavigation))]
        public virtual ICollection<Disclaimer> DisclaimerModifiedByNavigation { get; set; }
        [InverseProperty(nameof(DistrictMaster.CreatedByNavigation))]
        public virtual ICollection<DistrictMaster> DistrictMasterCreatedByNavigation { get; set; }
        [InverseProperty(nameof(DistrictMaster.ModifiedByNavigation))]
        public virtual ICollection<DistrictMaster> DistrictMasterModifiedByNavigation { get; set; }
        [InverseProperty(nameof(EducationMaster.CreatedByNavigation))]
        public virtual ICollection<EducationMaster> EducationMasterCreatedByNavigation { get; set; }
        [InverseProperty(nameof(EducationMaster.ModifiedByNavigation))]
        public virtual ICollection<EducationMaster> EducationMasterModifiedByNavigation { get; set; }
        [InverseProperty(nameof(Experience.CreatedByNavigation))]
        public virtual ICollection<Experience> ExperienceCreatedByNavigation { get; set; }
        [InverseProperty(nameof(Experience.ModifiedByNavigation))]
        public virtual ICollection<Experience> ExperienceModifiedByNavigation { get; set; }
        [InverseProperty(nameof(InterviewResult.CreatedByNavigation))]
        public virtual ICollection<InterviewResult> InterviewResultCreatedByNavigation { get; set; }
        [InverseProperty(nameof(InterviewResult.ModifiedByNavigation))]
        public virtual ICollection<InterviewResult> InterviewResultModifiedByNavigation { get; set; }
        [InverseProperty(nameof(JobMaster.CreatedByNavigation))]
        public virtual ICollection<JobMaster> JobMasterCreatedByNavigation { get; set; }
        [InverseProperty(nameof(JobMaster.ModifiedByNavigation))]
        public virtual ICollection<JobMaster> JobMasterModifiedByNavigation { get; set; }
        [InverseProperty(nameof(JobQualification.CreatedByNavigation))]
        public virtual ICollection<JobQualification> JobQualificationCreatedByNavigation { get; set; }
        [InverseProperty(nameof(JobQualification.ModifiedByNavigation))]
        public virtual ICollection<JobQualification> JobQualificationModifiedByNavigation { get; set; }
        [InverseProperty("CreatedByNavigation")]
        public virtual ICollection<OtpMaster> OtpMaster { get; set; }
        [InverseProperty("CreatedByNavigation")]
        public virtual ICollection<PacandidateResult> PacandidateResult { get; set; }
        [InverseProperty("CreatedByNavigation")]
        public virtual ICollection<PadisclaimerAccetped> PadisclaimerAccetped { get; set; }
        [InverseProperty(nameof(Padisclaimer.CreatedByNavigation))]
        public virtual ICollection<Padisclaimer> PadisclaimerCreatedByNavigation { get; set; }
        [InverseProperty(nameof(Padisclaimer.ModifiedByNavigation))]
        public virtual ICollection<Padisclaimer> PadisclaimerModifiedByNavigation { get; set; }
        [InverseProperty(nameof(PamonthlyTest.CreatedByNavigation))]
        public virtual ICollection<PamonthlyTest> PamonthlyTestCreatedByNavigation { get; set; }
        [InverseProperty(nameof(PamonthlyTest.UpdatedByNavigation))]
        public virtual ICollection<PamonthlyTest> PamonthlyTestUpdatedByNavigation { get; set; }
        [InverseProperty(nameof(Paquestionnaire.CreatedByNavigation))]
        public virtual ICollection<Paquestionnaire> PaquestionnaireCreatedByNavigation { get; set; }
        [InverseProperty(nameof(Paquestionnaire.ModifiedByNavigation))]
        public virtual ICollection<Paquestionnaire> PaquestionnaireModifiedByNavigation { get; set; }
        [InverseProperty(nameof(PaquestionnaireResult.CreatedByNavigation))]
        public virtual ICollection<PaquestionnaireResult> PaquestionnaireResultCreatedByNavigation { get; set; }
        [InverseProperty(nameof(PaquestionnaireResult.ModifiedByNavigation))]
        public virtual ICollection<PaquestionnaireResult> PaquestionnaireResultModifiedByNavigation { get; set; }
        [InverseProperty("CreatedByNavigation")]
        public virtual ICollection<PatestCaseAttachments> PatestCaseAttachments { get; set; }
        [InverseProperty(nameof(PatestScenario.CreatedByNavigation))]
        public virtual ICollection<PatestScenario> PatestScenarioCreatedByNavigation { get; set; }
        [InverseProperty(nameof(PatestScenario.UpdatedByNavigation))]
        public virtual ICollection<PatestScenario> PatestScenarioUpdatedByNavigation { get; set; }
        [InverseProperty(nameof(PatrainingContentMaster.CreatedByNavigation))]
        public virtual ICollection<PatrainingContentMaster> PatrainingContentMasterCreatedByNavigation { get; set; }
        [InverseProperty(nameof(PatrainingContentMaster.ModifiedByNavigation))]
        public virtual ICollection<PatrainingContentMaster> PatrainingContentMasterModifiedByNavigation { get; set; }
        [InverseProperty(nameof(PavideoQuestionResult.CreatedByNavigation))]
        public virtual ICollection<PavideoQuestionResult> PavideoQuestionResultCreatedByNavigation { get; set; }
        [InverseProperty(nameof(PavideoQuestionResult.ModifiedByNavigation))]
        public virtual ICollection<PavideoQuestionResult> PavideoQuestionResultModifiedByNavigation { get; set; }
        [InverseProperty("CreatedByNavigation")]
        public virtual ICollection<PaymentHistory> PaymentHistory { get; set; }
        [InverseProperty(nameof(PpoInfo.CreatedByNavigation))]
        public virtual ICollection<PpoInfo> PpoInfoCreatedByNavigation { get; set; }
        [InverseProperty(nameof(PpoInfo.UpdatedByNavigation))]
        public virtual ICollection<PpoInfo> PpoInfoUpdatedByNavigation { get; set; }
        [InverseProperty("CreatedByNavigation")]
        public virtual ICollection<PpoLogic> PpoLogic { get; set; }
        [InverseProperty(nameof(Qualification.CreatedByNavigation))]
        public virtual ICollection<Qualification> QualificationCreatedByNavigation { get; set; }
        [InverseProperty(nameof(Qualification.ModifiedByNavigation))]
        public virtual ICollection<Qualification> QualificationModifiedByNavigation { get; set; }
        [InverseProperty(nameof(Questionnaire.CreatedByNavigation))]
        public virtual ICollection<Questionnaire> QuestionnaireCreatedByNavigation { get; set; }
        [InverseProperty(nameof(Questionnaire.ModifiedByNavigation))]
        public virtual ICollection<Questionnaire> QuestionnaireModifiedByNavigation { get; set; }
        [InverseProperty(nameof(QuestionnaireResult.CreatedByNavigation))]
        public virtual ICollection<QuestionnaireResult> QuestionnaireResultCreatedByNavigation { get; set; }
        [InverseProperty(nameof(QuestionnaireResult.ModifiedByNavigation))]
        public virtual ICollection<QuestionnaireResult> QuestionnaireResultModifiedByNavigation { get; set; }
        [InverseProperty(nameof(SentNotifications.CreatedByNavigation))]
        public virtual ICollection<SentNotifications> SentNotificationsCreatedByNavigation { get; set; }
        [InverseProperty(nameof(SentNotifications.ModifiedByNavigation))]
        public virtual ICollection<SentNotifications> SentNotificationsModifiedByNavigation { get; set; }
        [InverseProperty(nameof(ShortlistedCandidates.CreatedByNavigation))]
        public virtual ICollection<ShortlistedCandidates> ShortlistedCandidatesCreatedByNavigation { get; set; }
        [InverseProperty(nameof(ShortlistedCandidates.ModifiedByNavigation))]
        public virtual ICollection<ShortlistedCandidates> ShortlistedCandidatesModifiedByNavigation { get; set; }
        [InverseProperty(nameof(SpecializationMaster.CreatedByNavigation))]
        public virtual ICollection<SpecializationMaster> SpecializationMasterCreatedByNavigation { get; set; }
        [InverseProperty(nameof(SpecializationMaster.UpdatedByNavigation))]
        public virtual ICollection<SpecializationMaster> SpecializationMasterUpdatedByNavigation { get; set; }
        [InverseProperty(nameof(StateMaster.CreatedByNavigation))]
        public virtual ICollection<StateMaster> StateMasterCreatedByNavigation { get; set; }
        [InverseProperty(nameof(StateMaster.ModifiedByNavigation))]
        public virtual ICollection<StateMaster> StateMasterModifiedByNavigation { get; set; }
        [InverseProperty(nameof(TestScenario.CreatedByNavigation))]
        public virtual ICollection<TestScenario> TestScenarioCreatedByNavigation { get; set; }
        [InverseProperty(nameof(TestScenario.UpdatedByNavigation))]
        public virtual ICollection<TestScenario> TestScenarioUpdatedByNavigation { get; set; }
        [InverseProperty(nameof(TrainingContentsMaster.CreatedByNavigation))]
        public virtual ICollection<TrainingContentsMaster> TrainingContentsMasterCreatedByNavigation { get; set; }
        [InverseProperty(nameof(TrainingContentsMaster.ModifiedByNavigation))]
        public virtual ICollection<TrainingContentsMaster> TrainingContentsMasterModifiedByNavigation { get; set; }
        [InverseProperty("CreatedByNavigation")]
        public virtual ICollection<UserCourses> UserCourses { get; set; }
        [InverseProperty(nameof(UserProfile.CreatedByNavigation))]
        public virtual ICollection<UserProfile> UserProfileCreatedByNavigation { get; set; }
        [InverseProperty(nameof(UserProfile.Login))]
        public virtual ICollection<UserProfile> UserProfileLogin { get; set; }
        [InverseProperty(nameof(UserProfile.ModifiedByNavigation))]
        public virtual ICollection<UserProfile> UserProfileModifiedByNavigation { get; set; }
    }
}